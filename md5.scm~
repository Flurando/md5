(define (make-word fill-lst)
  (let* ([l (length fill-lst)]
	 [bv (make-bytevector l)])
	(let loop ([a 0] [lst fill-lst])
	  (if (= a (- l 1))
	      #f
	      (begin
		(bytevector-fill! bv (car lst) a (+ a 1))
		(loop (+ a 1) (cdr lst)))))
	bv))
